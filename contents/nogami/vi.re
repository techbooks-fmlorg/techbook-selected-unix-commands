#@# 

=={vi} vi

Linuxを含むUnixベースのOSで利用できるテキストエディタ。
viは、キーボードのみでの編集を前提にしたコマンドラインベースのエディタであり、
テキスト編集のためにキーボードショートカットを使用する。


=== 書式

//list[][][fontsize=xx-small]{
$ vi [options] [file ..]
//}


=== 実行例

==== 実行例

//list[][][fontsize=xx-small]{
$ vi ファイル名
//}

==== 実行結果

 * ファイル名を指定して起動する
 * そのファイルが実行したディレクトリに無ければ作成する
 * その後エディタ画面になる。

=== コマンドモードと入力モード

viにはモードという考え方があり、モードごとに挙動が異なる。
コマンドモードと入力モードの２つがある。
viコマンドが起動すると、モードはコマンドモードである。

エディタとして普通に期待される文字などを入力するモードが「入力モード」だ。
コマンドモードは、その他の制御を行うモードで、
Wordでいえば上のリボンにある様々なボタンに対応する。


=== よく使うコマンドの紹介

==== モード変更

===== i,a

コマンドモードから入力モードへ移行する。入力位置は
iキーでは現在のカーソル位置に文字が挿入される（insert）。
aキーではカーソル位置の右から文字が挿入される（append）。

===== esc

入力モードからコマンドモードへ移行する。

==== ファイルの保存と終了

コマンドモードから以下のコマンドを実行することで保存及びエディタを終了することができる。
コマンドは画面下部で入力できる。

===== ZZ

shiftを押しながらzを二回たたくというシンプルなやり方。
なぜかメジャーな方法と認識されていないらしい。
よくわからない

変更があれば上書き保存される、変更がないなら即終了という動作をする。
変更を捨てたい場合は、次の@<code>{:q!}を使うこと

===== :q!

変更内容を保存せずに終了する場合には@<code>{:q!}だけを入力する。

===== :w

いわゆる「上書き保存」。
変更内容を保存する場合に入力する。この場合、エディタは続行する。

===== :wq

いわゆる「上書き保存」をしつつ「終了」。
変更内容を保存して終了する場合に入力する。

==== コピー＆ペースト

コマンドモードから以下のコマンドを実行することで、コピー及びペーストができる。
またマウスでも、文字列をドラックして選択して右クリックをした後、
コピーを選択することで、文字列のコピーができる。
同様に貼り付ける場合は、ペーストしたい位置にカーソルを移動後、
右クリックしてペーストを選択することで、文字列のペーストができる。

===== yy

カーソル位置の行をコピーする。

===== 数値 +yy

カーソル位置以下の数値分の行を一括でコピーする。

===== p,P

コピーした行をペーストする。
pであればカーソルの一つ下の行に、Pであればカーソルの一つ上の行にペーストする。


=== 実行例

次のような４行のファイルがあるとする。
今、カーソルは１行目の右端にある
//list[][][fontsize=xx-small]{
siritori|←カーソル位置 
ringo
gorira
raion
//}

説明の都合上、以下では左端に行番号をつけるが、実際のファイルには無いことに注意
//list[][][fontsize=xx-small]{
1 siritori|←カーソル位置 
2 ringo
4 gorira
4 raion
//}


===== 実行例1

//list[][][fontsize=xx-small]{
1 siritori|←カーソル位置 
2 ringo
3 gorira
4 raion
//}
ここで、
コマンドモードに移行し、
@<code>{4yy}を入力する


===== 実行例2

//list[][][fontsize=xx-small]{
実行例1の続き
1 siritori
2 ringo
3 gorira
4 raion
5 |←カーソル位置 
//}
入力モードで5行目を作成（当然カーソルも移動している）し、
コマンドモードに戻り、
@<code>{p}を入力する

===== 実行結果

//list[][][fontsize=xx-small]{
1 siritori
2 ringo
3 gorira
4 raion
5
6 siritori
7 ringo
8 gorira
9 raion
//}

まとめると次のような操作をしていた

 *  実行例1
 ** 4yyでカーソルの位置を含めて4行分(1行目～4行目)をコピー
 *  実行例2
 ** カーソルが5行目にあるところでpを実行した
 ** pはカーソルから一つ下の行へのコピーなので、
    5行目には何も書かれずに6行目から実行例1でコピーしたテキスト(1〜4行目)が書かれる
    (コピー＆ペーストされた)。
