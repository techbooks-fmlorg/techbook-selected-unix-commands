#@#

//footnote[asymmetric-encryption][本文中では「非対称暗号」に統一しておいたが、「公開鍵暗号」という言いまわしの方が一般的だと思う。「公開鍵」と「秘密鍵」という鍵のペアを用いる。「公開鍵」という表現は「方式」の話なのか？はたまた「鍵」の話なのか？素人には混乱を助長するだけだと思うので、非対称鍵という言い回しをしている。]

=={ssh} @<term>{ssh}

他のコンピューター・サーバにSSH(Secure Shell)プロトコルで@<idx>{ログイン((ろぐいん))}する。
@<idx>{非対称鍵暗号((ひたいしょうかぎあんごう))}@<fn>{asymmetric-encryption}による認証と通信路の暗号化を行う商用インターネット時代のデファクトスタンダードツール。サーバ運用管理の必須ツール。

認証時には、
非対称鍵暗号方式と@<idx>{対称鍵暗号((たいしょうかぎあんごう))}（パスワード）方式が利用できるが、
インターネットからアクセスできるサーバは非対称鍵暗号認証のみで運用するべきである。

=== 書式

//list[][][fontsize=xx-small]{
$ ssh  [options] DESTINATION
$ ssh  [options] DESTINATION [command [argument...]
//}

 *  「@<code>{ssh サーバ}」の形式でサーバへ遠隔ログインできる
 ** 引数が「サーバ」形式の場合、
    サーバにログインするユーザ名は今コマンドを実行しているユーザ名と同じと想定される
 ** 「ユーザ@サーバ」つまりメールアドレス形式で、サーバのユーザ名を指定できる
 *  「@<code>{ssh サーバ コマンド}」の形式でコマンドを遠隔実行できるが、演習では使わないため説明は省略

=== 実行例

==== 実行例

//list[][][fontsize=xx-small]{
$ ssh user@16.32.64.128
//}
==== 実行結果

//list[][][fontsize=xx-small]{
$ ssh user@16.32.64.128
    〜省略〜
user@16.32.64.128$ 
//}
最終行は（ログイン先サーバの）シェルのプロンプトである。
この例では@<code>{$ }の左側に「ユーザー名@ipアドレス」が表示されている。


=== 知っていると便利なオプション: -i ファイル名（i, indiaのi)

SSH接続に使用する非対称鍵暗号方式の秘密鍵ファイルを指定する。
ちなみにオプション名はidentityのiである。


===== 実行例

//list[][][fontsize=xx-small]{
$ ssh -i .ssh/id_rsa.pem user@16.32.64.128
//}
@<code>{.ssh/id_rsa.pem}の部分が秘密鍵ファイルである


===== 実行結果

//list[][][fontsize=xx-small]{
$ ssh -i .ssh/id_rsa.pem user@16.32.64.128
    〜省略〜
user@16.32.64.128$ 
//}
説明は同上なので省略
